{{- if $.Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: mg-exporter-config
  namespace: {{ $.Values.prometheus.namespace }}
data:
  ha_config.yaml: |
    exporter:
      port: {{ $.Values.prometheus.memgraphExporter.port }}
      pull_frequency_seconds: {{ $.Values.prometheus.memgraphExporter.pullFrequencySeconds }}
    instances:
      # TODO: (andi) Needs to be added to the section about upgrading, try to templatize
      - name: coord1
        url:  http://memgraph-coordinator-1.default.svc.cluster.local
        port: 9091
        type: coordinator
      - name: coord2
        url:  http://memgraph-coordinator-2.default.svc.cluster.local
        port: 9091
        type: coordinator
      - name: coord3
        url:  http://memgraph-coordinator-3.default.svc.cluster.local
        port: 9091
        type: coordinator
      - name: data1
        url:  http://memgraph-data-0.default.svc.cluster.local
        port: 9091
        type: data_instance
      - name: data2
        url:  http://memgraph-data-1.default.svc.cluster.local
        port: 9091
        type: data_instance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mg-exporter
  namespace: {{ $.Values.prometheus.namespace }}
  labels:
    app: mg-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mg-exporter
  template:
    metadata:
      labels:
        app: mg-exporter
    spec:
      containers:
        - name: exporter
          image: {{ $.Values.prometheus.memgraphExporter.repository }}:{{ $.Values.prometheus.memgraphExporter.tag }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/mg-exporter/ha_config.yaml
              subPath: ha_config.yaml
          ports:
            - containerPort: {{ $.Values.prometheus.memgraphExporter.port }}
          env:
            - name: DEPLOYMENT_TYPE
              value: HA  # HA stands for high availability
            - name: CONFIG_FILE
              value: /etc/mg-exporter/ha_config.yaml
      volumes:
        - name: config-volume
          configMap:
            name: mg-exporter-config
---
apiVersion: v1
kind: Service
metadata:
  name: mg-exporter
  namespace: {{ $.Values.prometheus.namespace }}
  labels:
    app: mg-exporter
spec:
  selector:
    app: mg-exporter
  ports:
    - protocol: TCP
      name: tcp-metrics-port
      port: {{ $.Values.prometheus.memgraphExporter.port }}
      targetPort: {{ $.Values.prometheus.memgraphExporter.port }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mg-exporter
  namespace: {{ $.Values.prometheus.namespace }}
  labels:
    release: {{ $.Values.prometheus.serviceMonitor.kubePrometheusStackReleaseName }}
spec:
  selector:
    matchLabels:
      app: mg-exporter
  endpoints:
    - port: tcp-metrics-port  # must be the same as the service port name
      interval: {{ $.Values.prometheus.serviceMonitor.interval }}
  namespaceSelector:
    matchNames:
      - {{ $.Values.prometheus.namespace }} # This refers to where our service exposing the exporter is located
{{- end }}
