# Default values for memgraph-high-availability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.|

memgraph:
  image:
    repository: memgraph
    tag: 2.16.0_72_437f6f0b7
    pullPolicy: IfNotPresent
  env:
    MEMGRAPH_ENTERPRISE_LICENSE: "<your-license>"
    MEMGRAPH_ORGANIZATION_NAME: "<your-organization-name>"
  probes:
    startup:
      failureThreshold: 30
      periodSeconds: 10
    readiness:
      initialDelaySeconds: 5
      periodSeconds: 5
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 10
  data:
    volumeClaim:
      storagePVCClassName: ""
      storagePVC: false
      storagePVCSize: "1Gi"
      logPVCClassName: ""
      logPVC: false
      logPVCSize: "256Mi"
  coordinators:
    volumeClaim:
      storagePVCClassName: ""
      storagePVC: false
      storagePVCSize: "1Gi"
      logPVCClassName: ""
      logPVC: false
      logPVCSize: "256Mi"



data:
- id: "0"
  boltPort: 7687
  managementPort: 10000
  replicationPort: 20000
  args:
  - "--experimental-enabled=high-availability"
  - "--management-port=10000"
  - "--bolt-port=7687"
  - "--also-log-to-stderr"
  - "--log-level=TRACE"
  - "--replication-restore-state-on-startup=true"

- id: "1"
  boltPort: 7687
  managementPort: 10000
  replicationPort: 20000
  args:
  - "--experimental-enabled=high-availability"
  - "--management-port=10000"
  - "--bolt-port=7687"
  - "--also-log-to-stderr"
  - "--log-level=TRACE"
  - "--replication-restore-state-on-startup=true"

coordinators:
- id: "1"
  boltPort: 7687
  coordinatorPort: 12000
  args:
  - "--experimental-enabled=high-availability"
  - "--coordinator-id=1"
  - "--coordinator-port=12000"
  - "--bolt-port=7687"
  - "--also-log-to-stderr"
  - "--log-level=TRACE"
  - "--replication-restore-state-on-startup=true"
- id: "2"
  boltPort: 7687
  coordinatorPort: 12000
  args:
  - "--experimental-enabled=high-availability"
  - "--coordinator-id=2"
  - "--coordinator-port=12000"
  - "--bolt-port=7687"
  - "--also-log-to-stderr"
  - "--log-level=TRACE"
  - "--replication-restore-state-on-startup=true"
- id: "3"
  boltPort: 7687
  coordinatorPort: 12000
  args:
  - "--experimental-enabled=high-availability"
  - "--coordinator-id=3"
  - "--coordinator-port=12000"
  - "--bolt-port=7687"
  - "--also-log-to-stderr"
  - "--log-level=TRACE"
  - "--replication-restore-state-on-startup=true"



# ha:
#   main:
#     args:
#     - "--experimental-enabled=high-availability"
#     - "--management-port=19001"
#     - "--bolt-port=7687"
#   replica:
#     args:
#     - "--experimental-enabled=high-availability"
#     - "--management-port=19002"
#     - "--bolt-port=7688"


# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}
# podLabels: {}

# podSecurityContext: {}
# # fsGroup: 2000

# securityContext: {}
# # capabilities:
# #   drop:
# #   - ALL
# # readOnlyRootFilesystem: true
# # runAsNonRoot: true
# # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#   # kubernetes.io/ingress.class: nginx
#   # kubernetes.io/tls-acme: "true"
#   hosts:
#   - host: chart-example.local
#     paths:
#     - path: /
#       pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
# # We usually recommend not to specify default resources and to leave this as a conscious
# # choice for the user. This also increases chances charts run on environments with little
# # resources, such as Minikube. If you do want to specify resources, uncomment the following
# # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# # limits:
# #   cpu: 100m
# #   memory: 128Mi
# # requests:
# #   cpu: 100m
# #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
