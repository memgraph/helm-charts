name: Lint and Test Charts High Availability

on:
  pull_request:
    paths:
      - 'charts/memgraph-high-availability/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          check-latest: true

      - name: Download dependencies
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Update chart dependencies
        run: |
          helm dependency update charts/memgraph-high-availability

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --check-version-increment false --charts charts/memgraph-high-availability

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Set up Memgraph environment variables
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          echo "MEMGRAPH_ENTERPRISE_LICENSE=${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}" >> $GITHUB_ENV
          echo "MEMGRAPH_ORGANIZATION_NAME=${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}" >> $GITHUB_ENV

      - name: Install csi-hostpath-delayed storage class
        run: |
          kubectl apply -f ./charts/memgraph-high-availability/storage-class.yaml

      - name: Install memgraph-high-availability
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm install memgraph-db ./charts/memgraph-high-availability \
            --set env.MEMGRAPH_ENTERPRISE_LICENSE=$MEMGRAPH_ENTERPRISE_LICENSE \
            --set env.MEMGRAPH_ORGANIZATION_NAME=$MEMGRAPH_ORGANIZATION_NAME \
            --set storage.data.libStorageClassName=csi-hostpath-delayed \
            --set storage.data.logStorageClassName=csi-hostpath-delayed \
            --set storage.coordinators.libStorageClassName=csi-hostpath-delayed \
            --set storage.coordinators.logStorageClassName=csi-hostpath-delayed \

      - name: Wait for Memgraph pods
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          echo "Waiting for all pods to be ready..."
          if: steps.list-changed.outputs.changed == 'true'
          run: |
            echo "Waiting for all pods in the namespace to be Ready..."
            for i in {1..60}; do
              echo "--- Pod status at $(date) ---"
              kubectl get pods -o wide
              # Check if all pods are ready
              ready=$(kubectl get pods --no-headers | awk '{print $2}' | grep -vE '^([0-9]+)/\1$' || true)
              if [ -z "$ready" ]; then
                echo "âœ… All pods are Ready"
                break
              fi
              sleep 10
            done

      - name: Run Helm tests (create test Jobs)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm test mem-ha-test --timeout 5m || true

      - name: Collect Helm test pod logs
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          jobs=$(kubectl get jobs -o jsonpath='{.items[?(@.metadata.labels."helm\.sh/hook"=="test")].metadata.name}')
          for job in $jobs; do
            echo "=== Logs for job/$job ==="
            pods=$(kubectl get pods --selector=job-name=$job -o jsonpath='{.items[*].metadata.name}')
            for pod in $pods; do
              echo "--- pod/$pod ---"
              kubectl logs "$pod"
            done
          done
